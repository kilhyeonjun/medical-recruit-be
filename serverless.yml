service: medical-recruit-be

org: kilpenguin
app: medical-recruit-be

frameworkVersion: '4'

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-2'}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:GetObject'
          Resource:
            - 'arn:aws:s3:::${env:SSL_CERTIFICATE_S3_BUCKET}/${env:SSL_CERTIFICATE_S3_KEY}'

package:
  individually: true

build:
  esbuild:
    # Enable or Disable bundling the function code and dependencies. (Default: true)
    bundle: true
    # Enable minifying function code. (Default: false)
    minify: false
    # NPM packages to not be bundled. Glob patterns are supported here.
    external:
      - '@aws-sdk/client-s3'
    # NPM packages to not be bundled, as well as not included in node_modules
    # in the zip file uploaded to Lambda. By default this will be set to aws-sdk
    # if the runtime is set to nodejs16.x or lower or set to @aws-sdk/* if set to nodejs18.x or higher.
    # Glob patterns are supported here.
    exclude:
      - '@aws-sdk/*'
      - '!@aws-sdk/client-bedrock-runtime'
    # The packages config, this can be set to override the behavior of external
    # If this is set then all dependencies will be treated as external and not bundled.
    packages: external
    # By default Framework will attempt to build and package all functions concurrently.
    # This property can bet set to a different number if you wish to limit the
    # concurrency of those operations.
    buildConcurrency: 3
    # Enable or configure sourcemaps, can be set to true or to an object with further configuration.
    sourcemap:
      # The sourcemap type to use, options are (inline, linked, or external)
      type: linked
      # Whether to set the NODE_OPTIONS on functions to enable sourcemaps on Lambda
      setNodeOptions: true

functions:
  main:
    handler: dist/src/lambda.handler
    events:
      - httpApi:
          method: any
          path: /
      - http:
          method: any
          path: /{proxy+}

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
